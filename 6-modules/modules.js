/*
Преимущества использования модулей в Node.js:

Лучшее структурирование кода — код, разбитый на модули, гораздо легче для понимания, поддержки, тестирования
Облегчение переиспользования кода — правильно написанный и документированный модуль легко может быть использован в нескольких местах в одном проекте, а также в разных проектах
Инкапсуляция — содержимое модуля инкапсулировано, т.е. доступно исключительно внутри модуля. Разработчик сам решает, что импортировать в модуль и что экспортировать за пределы модул
Благодаря кэшированию модулей их многократный импорт не приводит к дополнительным издержкам производительности

Стандартные модули - https://nodejs.org/dist/latest-v14.x/docs/api/
Они уже скомпилированы в двоичный код и описаны в документации. Перечень стандартных модулей. 
Стандартные модули достаточно подключить и можно с ними работать.

Для подключения модуля используется функция require()
Примеры подключения модулей:

const path = require('path');
const fs = require('fs');
const os = require('os');

Модули-пакеты (Packages)
К модулям-пакетам относятся папки с кодом, описываемые при помощи находящегося в них файла package.json. 
С модулями-пакетами удобно работать при помощи менеджеров пакетов, таких как npm или yarn. 
Если мы хотим использовать уже написанные кем-то модули-пакеты (частый способ использования кода других разработчиков), их нужно установить, затем подключить, затем использовать.
Установка модуля-пакета при помощи npm осуществляется командой

Модули, которые разработчик создаёт самостоятельно
Создание модуля начинается с создания отдельного js-файла, в котором пишется код. Если модуль должен экспортировать что-либо наружу, это делается при помощи записи экспортируемого значения в качестве свойства специального объекта module.exports, либо его перезаписи. Экспортируемые из одних модулей значения мы можем импортировать в других модулях. Как и в случае с другими типами модулей, импорт осуществляется при помощи функции require(), только в качестве аргумента функции вместо имени модуля указываем путь к файлу.
*/